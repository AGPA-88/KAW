name: build
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # 1. Scanner de vulnérabilités avec Trivy
      - name: Run Trivy vulnerability scanner in FS mode - table logs
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          hide-progress: false
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Run Trivy vulnerability scanner in FS mode - sarif mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

          
      # 2. Analyse de sécurité avec Semgrep
      - name: Install Sempgrp
        run: |
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          pipx install semgrep
      - name: Run Semgrep
        run: |
          semgrep scan --verbose --sarif --output semgrep-results.sarif --config auto .
      - name: Upload Semgrep SARIF Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'semgrep-results.sarif'

      # 3. Analyse de qualité et de bonnes pratiques avec Ansible Lint
      - name: Install Ansible Lint
        run: sudo apt-get update && sudo apt-get install -y ansible-lint
      - name: Run Ansible Lint
        run: ansible-lint .

      # 4. Analyse avec Checkov
      - name: Run Checkov scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: ansible
          output_format: sarif

      # Upload des résultats dans GitHub Security
      - name: Upload Checkov SARIF Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'results.sarif'

      # 5. Analyse avec Checkov
      - name: Run KICS Scan
        uses: Checkmarx/kics-github-action@v1.7.0
        with:
          path: '.'
          output_path: kics-results
          platform: ansible
          
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'kics-results/results.sarif'
